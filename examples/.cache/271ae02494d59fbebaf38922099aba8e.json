{"dependencies":[{"name":"./transport.js","loc":{"line":129,"column":24}},{"name":"./state.js","loc":{"line":133,"column":20}},{"name":"./stateHandler.js","loc":{"line":139,"column":27}},{"name":"./markerHandler.js","loc":{"line":140,"column":28}},{"name":"./mouseMoveHandler.js","loc":{"line":141,"column":31}},{"name":"./mouseButtonHandler.js","loc":{"line":142,"column":33}},{"name":"./pageScrollHandler.js","loc":{"line":143,"column":32}},{"name":"./windowSizeHandler.js","loc":{"line":161,"column":34}},{"name":"./windowPositionHandler.js","loc":{"line":162,"column":38}},{"name":"./windowUnloadHandler.js","loc":{"line":163,"column":36}},{"name":"./visibilityChangeHandler.js","loc":{"line":164,"column":40}},{"name":"./touchHandler.js","loc":{"line":172,"column":31}}],"generated":{"js":"/*! ci-trap v0.2.0 - MIT license */\r\n/* global module require window */\r\n\r\n/*\r\n * Motion event (mouse movement) catcher for browsers emitting data compatible\r\n * with Cursor Insight's motion analyzer engine. (touch, gyro, etc. is WIP)\r\n *\r\n * Copyright (c) 2012--2014, GOLDA Bence <gbence@algernon.hu>\r\n *                     2014, GOLDA Bence <bence@cursorinsight.com>\r\n *                     2014, TÖRTELI Olivér <oliver@cursorinsight.com>\r\n *\r\n * # Data format (in ~BNF) ##########################################\r\n *\r\n *    <data> ::= <version> <headers> <events>\r\n * <headers> ::= <header-size:12b> <url-encoded-string:<header-size in bytes>>\r\n *  <events> ::= <event> <events> | EOS\r\n *   <event> ::= <mouse-move> | <mouse-button>\r\n *             | <touch-move> | <touch-change>\r\n *             | <scroll-change>\r\n *             | <mouse-wheel-x> | <mouse-wheel-y>\r\n *             | <window-size-change> | <window-position-change>\r\n *             | <visibility-change> | <unload>\r\n *             | <marker> | <state>\r\n *\r\n * // this is (and will be) always a constant and a version id\r\n * <version>        ::= \"B\" <version-letter>\r\n * <version-letter> ::= \"A\" | \"B\" | \"C\" | \"D\" ...\r\n *\r\n * // sum: 60b\r\n * <mouse-move> ::= 0b0000 <time-difference:20b>\r\n *                  <mouse-screen-x:18b> <mouse-screen-y:18b>\r\n *\r\n * <touch-move> ::= 0b0001 <time-difference:20b>\r\n *                  <empty:1b> <touch-id:5b>\r\n *                  <touch-screen-x:18b> <touch-screen-y:18b>\r\n *\r\n * TODO: return only the differences and put \"markers\" (as full frames in\r\n * video) into the stream\r\n *\r\n * // sum: 66b\r\n * <mouse-button> ::= 0b0010 <time-difference:20b>\r\n *                    <button-state:1b> <button-definition:5b> // button-state == 1 for \"down\", == 0 for \"up\"\r\n *                    // <mouse-screen-x:18b> <mouse-screen-y:18b>\r\n *\r\n * <touch-change> ::= 0b0011 <time-difference:20b>\r\n *                    <touch-state:1b> <touch-id:5b> // touch-state == 1 for \"down\"/\"start\", == 0 for \"up\"/\"end\"\r\n *                    <touch-screen-x:18b> <touch-screen-y:18b>\r\n *\r\n * // sum: 48b\r\n * <scroll-change> ::= 0b0100 <time-difference:20b>\r\n *                     <sign-of-dx:1b> <abs-dx:11b>\r\n *                     <sign-of-dy:1b> <abs-dy:11b>\r\n *\r\n * // sum: 36b\r\n * <mouse-wheel-x> ::= 0b0110 <time-difference:20b>\r\n *                     <sign-of-d:1b> <abs-d:11b>\r\n *\r\n * // sum: 36b\r\n * <mouse-wheel-y> ::= 0b0111 <time-difference:20b>\r\n *                     <sign-of-d:1b> <abs-d:11b>\r\n *\r\n * // sum: 54b\r\n * <window-size-change> ::= 0b1000 <time-difference:20b>\r\n *                          <inner-window-width:15b> <inner-window-height:15b>\r\n *\r\n * // sum: 54b\r\n * <window-position-change> ::= 0b1001 <time-difference:20b>\r\n *                              <window-position-left:15b> <window-position-top:15b>\r\n *\r\n * // sum: 24b\r\n * <visibility-change> ::= 0b1010 <time-difference:20b> // (visible/focused)\r\n * <visibility-change> ::= 0b1011 <time-difference:20b> // (hidden/idle)\r\n *\r\n * // sum: 24b\r\n * <unload> ::= 0b1100 <time-difference:20b>\r\n *\r\n * // sum: variable\r\n * <marker> ::= 0b1110 <time-difference:20b>\r\n *              <size:12b> <url-encoded-string:<size in bytes>>\r\n *\r\n * // sum: 4+20+42+(12*18) = 282b\r\n * <state> ::= 0b1111 <time-difference:20b>\r\n *             <current-time-stamp:42b>\r\n *             <mouse-screen-x:18b> <mouse-screen-y:18b>\r\n *             // <mouse-client-x:18b> <mouse-client-y:18b> // temporarily disabled\r\n *             <page-scroll-x(left):18b> <page-scroll-top-y(top):18b>\r\n *             <inner-window-width:18b> <inner-window-height:18b>\r\n *             <outer-window-width:18b> <outer-window-height:18b>\r\n *             <window-position-left:18b> <window-position-top:18b>\r\n *             <screen-width:18b> <screen-height:18b>\r\n *\r\n * JsDoc keyword:\r\n * https://code.google.com/p/jsdoc-toolkit/wiki/TagReference\r\n *\r\n * @link ClassName#CITrap\r\n */\r\n\r\n(function(/* global */){function moduleDefinition(/*wheelShim*/) { // dependency1, dependency2...\r\n\"use strict\";\r\n// ---------------------------------------------------------------------------\r\n\r\n/**\r\n * @constructor CITrap\r\n * @param {String} element Html element which will be watched\r\n * @return {Function} Return CITrap, it will be the module\r\n */\r\nfunction CITrap(element, idleTimeout) {\r\n\r\n  var\r\n    windowAlias = window,\r\n    documentAlias = window.document,\r\n    undefinedAlias;\r\n\r\n  // Set up defaults.\r\n  if (element === undefinedAlias) {\r\n    element = documentAlias;\r\n  }\r\n\r\n  var\r\n\r\n    windowSupport = (element === windowAlias || element === documentAlias),\r\n    touchSupport = \"ontouchstart\" in windowAlias ||    // works on most browsers\r\n                   \"onmsgesturechange\" in windowAlias, // works on ie10\r\n\r\n    // master loop\r\n    running = false,\r\n\r\n    // Buffer + transport\r\n    Transport = require(\"./transport.js\"),\r\n    transport = new Transport(windowAlias),\r\n\r\n    // State\r\n    State = require(\"./state.js\"),\r\n    state = new State(windowAlias, transport, idleTimeout),\r\n\r\n    // Handlers\r\n    handlers = new Array(state),\r\n\r\n    StateHandler = require(\"./stateHandler.js\"),\r\n    MarkerHandler = require(\"./markerHandler.js\"),\r\n    MouseMoveHandler = require(\"./mouseMoveHandler.js\"),\r\n    MouseButtonHandler = require(\"./mouseButtonHandler.js\"),\r\n    PageScrollHandler = require(\"./pageScrollHandler.js\"),\r\n    //MouseWheelHandler = require(\"./mouseWheelHandler.js\");\r\n\r\n    markerHandler = new MarkerHandler(windowAlias, documentAlias, element, state, transport);\r\n\r\n  handlers.push(new StateHandler(windowAlias, documentAlias, element, state, transport));\r\n  handlers.push(markerHandler);\r\n  handlers.push(new MouseMoveHandler(element, state, transport));\r\n  handlers.push(new MouseButtonHandler(element, state, transport));\r\n\r\n  // IE 6, 7, 8 does not support scroll event on document\r\n  // http://www.quirksmode.org/dom/events/scroll.html\r\n  handlers.push(new PageScrollHandler(element === documentAlias ? windowAlias : element, state, transport));\r\n\r\n  // handlers.push(new MouseWheelHandler(element, state, transport));\r\n\r\n  if (windowSupport) {\r\n    var\r\n      WindowSizeHandler = require(\"./windowSizeHandler.js\"),\r\n      WindowPositionHandler = require(\"./windowPositionHandler.js\"),\r\n      WindowUnloadHandler = require(\"./windowUnloadHandler.js\"),\r\n      VisibilityChangeHandler = require(\"./visibilityChangeHandler.js\");\r\n    handlers.push(new WindowSizeHandler(windowAlias, state, transport));\r\n    handlers.push(new WindowPositionHandler(windowAlias, documentAlias, state, transport));\r\n    handlers.push(new WindowUnloadHandler(windowAlias, state, transport));\r\n    handlers.push(new VisibilityChangeHandler(windowAlias, state, transport));\r\n  }\r\n\r\n  if (touchSupport) {\r\n    var TouchHandler = require(\"./touchHandler.js\");\r\n    handlers.push(new TouchHandler(element, state, transport));\r\n  }\r\n\r\n  /*\r\n   * Public methods\r\n   */\r\n  return {\r\n\r\n    /**\r\n     *  Starts event processing.\r\n     */\r\n    start: function(options) {\r\n      if (running) {\r\n        return;\r\n      }\r\n      options = options || {};\r\n      var length = handlers.length, i = 0;\r\n      for (;i < length; i++) {\r\n        if((handlers[i] !== undefinedAlias) && (typeof handlers[i].start === \"function\")) {\r\n          handlers[i].start(options);\r\n        }\r\n      }\r\n      running = true;\r\n    },\r\n\r\n    /**\r\n     *  Stops event processing.\r\n     */\r\n    stop: function() {\r\n      if (!running) {\r\n        return;\r\n      }\r\n      var length = handlers.length, i = 0;\r\n      for (;i < length; i++) {\r\n        if((handlers[i] !== undefinedAlias) && (typeof handlers[i].stop === \"function\")) {\r\n          handlers[i].stop();\r\n        }\r\n      }\r\n      running = false;\r\n    },\r\n\r\n    buffer: function() {\r\n      return transport.buffer();\r\n    },\r\n\r\n    // TODO make this \"readonly\"\r\n    element: element,\r\n\r\n    send: function() {\r\n      return transport.send.apply(this, arguments);\r\n    },\r\n\r\n    setHeader: function() {\r\n      return transport.setHeader.apply(this, arguments);\r\n    },\r\n\r\n    setUrl: function() {\r\n      return transport.setUrl.apply(this, arguments);\r\n    },\r\n\r\n    setSessionID: function() {\r\n      return transport.setSessionID.apply(this, arguments);\r\n    },\r\n\r\n    mark: function(text) {\r\n      if (markerHandler) {\r\n        markerHandler.trigger(text);\r\n      }\r\n    }\r\n\r\n  };\r\n}\r\n\r\n/**\r\n * Expose CITrap\r\n */\r\n\r\nreturn CITrap;\r\n\r\n// ---------------------------------------------------------------------------\r\n}\r\n\r\nmodule.exports = moduleDefinition(/*require(\"../vendor/mdn-wheel.js\")*/);\r\n\r\n}(this));\r\n"},"hash":"6fde253a39fa1a1fac3d08e08a4968c5"}
{"dependencies":[{"name":"fs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fs = require(\"fs\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar downEventName = \"mousedown\",\n    upEventName = \"mouseup\";\n\nvar MouseButtonHandler = function () {\n  function MouseButtonHandler(element, state, buffer) {\n    _classCallCheck(this, MouseButtonHandler);\n\n    this.element = element, this.state = state, this.buffer = buffer;\n\n    this.downHandler = this.downHandler.bind(this);\n    this.upHandler = this.upHandler.bind(this);\n  }\n\n  _createClass(MouseButtonHandler, [{\n    key: \"button\",\n    value: function button(event) {\n      var bb = event.which || function (b) {\n        if (b === 4) {\n          return 2;\n        } else if (b === 2) {\n          return 3;\n        } else {\n          return 1;\n        }\n      }(event.button);\n      return bb;\n    }\n  }, {\n    key: \"downHandler\",\n    value: function downHandler(event) {\n      var dT = this.state.getDT(event, 20);\n      var sX = event.screenX,\n          sY = event.screenY;\n      this.buffer.push([2, dT, sX, sY, 0, this.button(event)], [4, 20, 18, 18, 1, 5]);\n    }\n  }, {\n    key: \"upHandler\",\n    value: function upHandler(event) {\n      var dT = this.state.getDT(event, 20);\n      var sX = event.screenX,\n          sY = event.screenY;\n      this.buffer.push([2, dT, sX, sY, 0, this.button(event)], [4, 20, 18, 18, 1, 5]);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.element.addEventListener(downEventName, this.downHandler);\n      this.element.addEventListener(upEventName, this.upHandler);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.element.removeEventListener(downEventName, this.downHandler);\n      this.element.removeEventListener(upEventName, this.upHandler);\n    }\n  }]);\n\n  return MouseButtonHandler;\n}();\n\nexports.default = MouseButtonHandler;"},"hash":"d6a2269bab8a87ec870b7f99f7306111"}
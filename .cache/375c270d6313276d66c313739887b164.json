{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar delay = 1000 / 15,\n    // 15fps\n_timeout;\n\nvar WindowSizeHandler = function () {\n  function WindowSizeHandler(window, state, buffer) {\n    _classCallCheck(this, WindowSizeHandler);\n\n    this.window = window, this.state = state, this.buffer = buffer;\n\n    this.throttler = this.throttler.bind(this);\n  }\n  // ---------------------------------------------------------------------------\n\n  _createClass(WindowSizeHandler, [{\n    key: \"handler\",\n    value: function handler(event) {\n      var w = this.window.innerWidth,\n          h = this.window.innerHeight,\n          dT = this.state.getDT(event, 20);\n\n      // type = 0b1000\n      this.buffer.push([8, dT, w, h], [4, 20, 15, 15]);\n    }\n  }, {\n    key: \"throttler\",\n    value: function throttler(event) {\n      if (this.timeout) {\n        this.window.clearTimeout(this.timeout());\n      }\n    }\n  }, {\n    key: \"timeout\",\n    value: function timeout() {\n      var self = this;\n      window.setTimeout(function () {\n        _timeout = null;\n        self.handler(event);\n      }, delay);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.state.wW = this.window.innerWidth;\n      this.state.wH = this.window.innerHeight;\n      this.window.addEventListener(\"resize\", this.throttler, false);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.window.removeEventListener(\"resize\", this.throttler, false);\n    }\n  }]);\n\n  return WindowSizeHandler;\n}();\n\n;\n\nexports.default = WindowSizeHandler;"},"hash":"07f82676fdfa467ff80a075b46008f86"}
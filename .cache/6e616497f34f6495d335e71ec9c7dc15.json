{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar eventName = \"positionchanged\",\n    longDelay = 1000 / 2,\n    // 2fps\nshortDelay = 1000 / 15,\n    // 15fps\nthrottleBase = 15,\n    // it's a \"constant\"\nthrottleCount = throttleBase,\n    timeout;\n\nvar WindowPositionHandler = function () {\n  function WindowPositionHandler(window, document, state, buffer) {\n    _classCallCheck(this, WindowPositionHandler);\n\n    this.window = window, this.document = document, this.state = state, this.buffer = buffer;\n\n    this.handler = this.handler.bind(this);\n    this.poller = this.poller.bind(this);\n  }\n  // ---------------------------------------------------------------------------\n\n\n  _createClass(WindowPositionHandler, [{\n    key: \"windowPositionX\",\n    value: function windowPositionX() {\n      return this.window.screenX || this.window.screenLeft || 0;\n    }\n  }, {\n    key: \"windowPositionY\",\n    value: function windowPositionY() {\n      return this.window.screenY || this.window.screenTop || 0;\n    }\n  }, {\n    key: \"handler\",\n    value: function handler(event) {\n      var dT = this.state.getDT(null, 20);\n\n      this.state.windowPositionX = event.x;\n      this.state.windowPositionY = event.y;\n\n      // type = 0b1001\n      this.buffer.push([9, dT, event.x, event.y], [4, 20, 15, 15]);\n    }\n  }, {\n    key: \"poller\",\n    value: function poller() {\n      var x = this.windowPositionX(),\n          y = this.windowPositionY();\n\n      if (this.state.windowPositionX !== x || this.state.windowPositionY !== y) {\n        var event = this.document.createEvent(\"CustomEvent\");\n        event.initEvent(eventName, true, false);\n        event.x = x;\n        event.y = y;\n        this.window.dispatchEvent(event);\n\n        throttleCount = throttleBase;\n      }\n\n      if (throttleCount > 0) {\n        throttleCount--;\n        timeout = this.window.setTimeout(this.poller, shortDelay);\n      } else {\n        timeout = this.window.setTimeout(this.poller, longDelay);\n      }\n    }\n  }, {\n    key: \"startPoller\",\n    value: function startPoller() {\n      this.window.setTimeout(this.poller, longDelay);\n    }\n  }, {\n    key: \"stopPoller\",\n    value: function stopPoller() {\n      if (timeout) {\n        this.window.clearTimeout(timeout);\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.state.windowPositionX = this.windowPositionX();\n      this.state.windowPositionY = this.windowPositionY();\n      this.window.addEventListener(eventName, this.handler, false);\n      this.startPoller();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.stopPoller();\n      this.window.removeEventListener(eventName, this.handler, false);\n    }\n  }]);\n\n  return WindowPositionHandler;\n}();\n\n;\n\nexports.default = WindowPositionHandler;"},"hash":"b459feab102e2a77cfac0625ca3f2a44"}